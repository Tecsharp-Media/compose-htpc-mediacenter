version: "3.8"
services:
  # Proxy
  traefik:
    container_name: traefik
    image: traefik
    restart: always
    ports:
      - 80:80
      - 443:443
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Auth middleware
      - "traefik.http.routers.traefik.middlewares=auth-admin"
      - "traefik.http.middlewares.auth-admin.forwardauth.address=http://organizr/api/v2/auth?group=1"

      # Main domain
      - "traefik.http.routers.traefik.rule=Host(`$TRAEFIK_DOMAIN.$ADMIN_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=mytlschallenge"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik.service=api@internal"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    command:
      - "--ping"
      - "--log.level=INFO"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=$CLOUDFLARE_EMAIL"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    volumes:
      - $APPDATA/traefik:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD-SHELL", "traefik healthcheck --ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - media_net

  errorpage:
    container_name: traefik-custom-error
    image: guillaumebriday/traefik-custom-error-pages
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Main domain
      - "traefik.http.routers.errorpage.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.errorpage.entrypoints=websecure"
      - "traefik.http.services.globalerrorpage.loadbalancer.server.port=80"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - media_net

  # Frontend apps
  organizr:
    container_name: organizr
    image: organizr/organizr
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Main domain
      - "traefik.http.routers.organizr.rule=Host(`$ORGANIZR_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.organizr.entrypoints=websecure"
      - "traefik.http.routers.organizr.tls.certresolver=mytlschallenge"
      - "traefik.http.services.organizr.loadbalancer.server.port=80"
      - "traefik.http.routers.organizr.service=organizr"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      PGID: $PGID
      PUID: $PUID
      fpm: "false"
      branch: v2-develop
    volumes:
      - $APPDATA/organizr:/config
    networks:
      - media_net

  plex:
    container_name: plex
    image: linuxserver/plex
    restart: always
    runtime: nvidia
    devices:
      - /dev/dri/card0:/dev/dri/card0
    ports:
      - 32400:32400/tcp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Main domain
      - "traefik.http.routers.plex.rule=Host(`$MEDIA_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls.certresolver=mytlschallenge"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
      - "traefik.http.routers.plex.service=plex"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      TZ: $TIMEZONE
      PGID: $PGID
      PUID: $PUID
      PLEX_CLAIM: $PLEX_CLAIM
      NVIDIA_VISIBLE_DEVICES: all
    volumes:
      - $APPDATA/plex/server:/config
      - $MEDIA:/data/media
      - $TRANSCODING/plex:/transcoding
    # I do this so plex will always come up with the same ip-address
    networks:
      media_net:
        ipv4_address: 10.5.0.254

  overseerr:
    container_name: overseerr
    image: hotio/overseerr
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Auth middleware
      - "traefik.http.routers.overseerr.middlewares=auth-user"
      - "traefik.http.middlewares.auth-user.forwardauth.address=http://organizr/api/v2/auth?group=1"

      # Main domain
      - "traefik.http.routers.overseerr.rule=Host(`$OVERSEERR_DOMAIN.$MEDIA_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.overseerr.entrypoints=websecure"
      - "traefik.http.routers.overseerr.tls.certresolver=mytlschallenge"
      - "traefik.http.services.overseerr.loadbalancer.server.port=5055"
      - "traefik.http.routers.overseerr.service=overseerr"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      TZ: $TIMEZONE
      PGID: $PGID
      PUID: $PUID
    volumes:
      - $APPDATA/overseerr:/config
    networks:
      - media_net

  # Indexers
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:preview
    restart: always
    devices:
      - /dev/dri:/dev/dri
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Auth middleware
      - "traefik.http.routers.sonarr.middlewares=auth-admin"
      - "traefik.http.middlewares.auth-admin.forwardauth.address=http://organizr/api/v2/auth?group=1"

      # Main domain
      - "traefik.http.routers.sonarr.rule=Host(`$SONARR_DOMAIN.$MEDIA_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=mytlschallenge"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.sonarr.service=sonarr"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      PGID: $PGID
      PUID: $PUID
      DOCKER_MODS: "gilbn/theme.park:sonarr"
      TP_THEME: plex
    volumes:
      - $APPDATA/sonarr/config:/config
      - $MEDIA/tvshows:/data/media/tvshows
      - $MEDIA/anime-tvshows:/data/media/anime-tvshows
      - $MEDIA/kids-tvshows:/data/media/kids-tvshows
      - $USENET_DOWNLOADS:/data/downloads
      - $TORRENT_DOWNLOADS/deluge:/data/downloads/deluge
    networks:
      - media_net

  radarr:
    container_name: radarr
    image: linuxserver/radarr:nightly
    restart: always
    devices:
      - /dev/dri:/dev/dri
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Auth middleware
      - "traefik.http.routers.radarr.middlewares=auth-admin"
      - "traefik.http.middlewares.auth-admin.forwardauth.address=http://organizr/api/v2/auth?group=1"

      # Main domain
      - "traefik.http.routers.radarr.rule=Host(`$RADARR_DOMAIN.$MEDIA_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=mytlschallenge"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.radarr.service=radarr"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      PGID: $PGID
      PUID: $PUID
      DOCKER_MODS: "gilbn/theme.park:radarr"
      TP_THEME: plex
    volumes:
      - $APPDATA/radarr/config:/config
      - $MEDIA/movies:/data/media/movies
      - $MEDIA/kids-movies:/data/media/kids-movies
      - $USENET_DOWNLOADS:/data/downloads
      - $TORRENT_DOWNLOADS/deluge:/data/downloads/deluge
    networks:
      - media_net

  # Downloaders
  nzbget:
    container_name: nzbget
    image: linuxserver/nzbget
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Auth middleware
      - "traefik.http.routers.nzbget.middlewares=auth-admin"
      - "traefik.http.middlewares.auth-admin.forwardauth.address=http://organizr/api/v2/auth?group=1"

      # Main domain
      - "traefik.http.routers.nzbget.rule=Host(`$NZBGET_DOMAIN.$MEDIA_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.nzbget.entrypoints=websecure"
      - "traefik.http.routers.nzbget.tls.certresolver=mytlschallenge"
      - "traefik.http.services.nzbget.loadbalancer.server.port=6789"
      - "traefik.http.routers.nzbget.service=nzbget"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      PGID: $PGID
      PUID: $PUID
      TZ: $TIMEZONE
      DOCKER_MODS: "gilbn/theme.park:radarr"
      TP_THEME: plex
    volumes:
      - $APPDATA/nzbget:/config
      - $USENET_DOWNLOADS:/data/downloads
    networks:
      - media_net

  # Metrics
  tautulli:
    container_name: tautulli
    image: linuxserver/tautulli
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Auth middleware
      - "traefik.http.routers.tautulli.middlewares=auth-admin"
      - "traefik.http.middlewares.auth-admin.forwardauth.address=http://organizr/api/v2/auth?group=1"

      # Main domain
      - "traefik.http.routers.tautulli.rule=Host(`$TAUTULLI_DOMAIN.$MEDIA_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.tautulli.entrypoints=websecure"
      - "traefik.http.routers.tautulli.tls.certresolver=mytlschallenge"
      - "traefik.http.services.tautulli.loadbalancer.server.port=8181"
      - "traefik.http.routers.tautulli.service=tautulli"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      TZ: $TIMEZONE
      PGID: $PGID
      PUID: $PUID
      DOCKER_MODS: "gilbn/theme.park:radarr"
      TP_THEME: plex
    volumes:
      - $APPDATA/tautulli:/config
    networks:
      - media_net

  # Utilities
  tdarr:
    container_name: tdarr
    image: haveagitgat/tdarr:v2-preview
    restart: always
    ports:
      - 8266:8266
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Auth middleware
      - "traefik.http.routers.tdarr.middlewares=auth-admin"
      - "traefik.http.middlewares.auth-admin.forwardauth.address=http://organizr/api/v2/auth?group=1"

      # Main domain
      - "traefik.http.routers.tdarr.rule=Host(`$TDARR_DOMAIN.$MEDIA_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.tdarr.entrypoints=websecure"
      - "traefik.http.routers.tdarr.tls.certresolver=mytlschallenge"
      - "traefik.http.services.tdarr.loadbalancer.server.port=8265"
      - "traefik.http.routers.tdarr.service=tdarr"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      TZ: $TIMEZONE
      PGID: $PGID
      PUID: $PUID
      serverIP: "10.5.0.253"
      serverPort: 8266
      webUIPort: 8265
    volumes:
      - $APPDATA/tdarr:/app/server
      - $MEDIA:/media
      - $TRANSCODING/tdarr:/temp
    # I do this so tdarr will always come up with the same ip-address
    networks:
      media_net:
        ipv4_address: 10.5.0.253

  tdarr_node:
    container_name: tdarr-node
    image: haveagitgat/tdarr_node:v2-preview
    restart: always
    runtime: nvidia
    devices:
      - /dev/dri/card0:/dev/dri/card0
    labels:
      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      TZ: $TIMEZONE
      PGID: $PGID
      PUID: $PUID
      nodeID: mediacenter
      nodeIP: "10.5.0.252"
      serverIP: "10.5.0.253"
      serverPort: 8266
      NVIDIA_DRIVER_CAPABILITIES: all
      NVIDIA_VISIBLE_DEVICES: all
    volumes:
      - $MEDIA:/media
      - $TRANSCODING/tdarr:/temp
    deploy:
      resources:
        limits:
          cpus: 6
          # Give this bitch ALL THE RAM!
          # Found that at even 20G it was still causing swapping
          memory: 24576M
    # I do this so tdarr node will always come up with the same ip-address
    networks:
      media_net:
        ipv4_address: 10.5.0.252

  radarr-collections:
    container_name: radarr-collections
    image: si0972/radarr-collections
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      PGID: $PGID
      PUID: $PUID
      args: -f
    volumes:
      - $APPDATA/radarr/collections:/config
    networks:
      - media_net

  cloudflare-companion:
    container_name: cloudflare
    image: tiredofit/traefik-cloudflare-companion
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      CF_EMAIL: $CLOUDFLARE_EMAIL
      CF_TOKEN: $CLOUDFLARE_API_TOKEN
      TARGET_DOMAIN: $DOMAIN
      DOMAIN1: $DOMAIN
      DOMAIN1_ZONE_ID: $CLOUDFLARE_DOMAIN_ZONE_ID
      DOMAIN1_PROXIED: "false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - media_net

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_LABEL_ENABLE: "true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - media_net

networks:
  media_net:
    name: mediacenter_net
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1
