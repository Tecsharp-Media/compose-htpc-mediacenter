version: "3.8"
services:
  # Proxy
  traefik:
    container_name: traefik
    image: traefik
    restart: always
    ports:
      - 80:80
      - 443:443
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Auth middleware
      - "traefik.http.routers.traefik.middlewares=auth-admin"
      - "traefik.http.middlewares.auth-admin.forwardauth.address=http://organizr/api/v2/auth?group=1"

      # Main domain
      - "traefik.http.routers.traefik.rule=Host(`$TRAEFIK_DOMAIN.$ADMIN_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=mytlschallenge"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik.service=api@internal"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    command:
      - "--ping"
      - "--log.level=INFO"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=$CLOUDFLARE_EMAIL"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    volumes:
      - $APPDATA/traefik:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD-SHELL", "traefik healthcheck --ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - media_net

  errorpage:
    container_name: error
    image: guillaumebriday/traefik-custom-error-pages
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Main domain
      - "traefik.http.routers.errorpage.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.errorpage.entrypoints=websecure"
      - "traefik.http.services.globalerrorpage.loadbalancer.server.port=80"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - media_net

  # Frontend apps
  organizr:
    container_name: organizr
    image: organizr/organizr
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Main domain
      - "traefik.http.routers.organizr.rule=Host(`$ORGANIZR_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.organizr.entrypoints=websecure"
      - "traefik.http.routers.organizr.tls.certresolver=mytlschallenge"
      - "traefik.http.services.organizr.loadbalancer.server.port=80"
      - "traefik.http.routers.organizr.service=organizr"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      PGID: $PGID
      PUID: $PUID
      branch: v2-master
    volumes:
      - $APPDATA/organizr:/config
    networks:
      - media_net

  plex:
    container_name: plex
    image: linuxserver/plex
    restart: always
    devices:
      - /dev/dri:/dev/dri
    ports:
      - 32400:32400/tcp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Main domain
      - "traefik.http.routers.plex.rule=Host(`$MEDIA_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls.certresolver=mytlschallenge"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
      - "traefik.http.routers.plex.service=plex"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      TZ: $TIMEZONE
      PGID: $PGID
      PUID: $PUID
      PLEX_CLAIM: $PLEX_CLAIM
    volumes:
      - $APPDATA/plex:/config
      - $MEDIA:/data/media
    # I do this so plex will always come up with the same ip-address
    networks:
      media_net:
        ipv4_address: 10.5.0.254

  # jellyfin:
  #   container_name: jellyfin
  #   image: hotio/jellyfin

  #   restart: always
  #   ports:
  #     - 8096:8096
  #   devices:
  #     - /dev/dri:/dev/dri
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.docker.network=mediacenter_net"

  #     # Main domain
  #     - "traefik.http.routers.jellyfin.rule=Host(`$JELLYFIN_DOMAIN.$DOMAIN`)"
  #     - "traefik.http.routers.jellyfin.entrypoints=websecure"
  #     - "traefik.http.routers.jellyfin.tls.certresolver=mytlschallenge"
  #     - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
  #     - "traefik.http.routers.jellyfin.service=jellyfin"

  #     # Watchtower automated update label
  #     - "com.centurylinklabs.watchtower.enable=true"
  #   environment:
  #     TZ: $TIMEZONE
  #     PGID: $PGID
  #     PUID: $PUID
  #     DEBUG: "yes"
  #   volumes:
  #     - $APPDATA/jellyfin:/config
  #     - $MEDIA:/data/media
  #   networks:
  #     - media_net

  # Currently not working with jellyfin?
  ombi:
    container_name: ombi
    image: linuxserver/ombi
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Main domain
      - "traefik.http.routers.ombi.rule=Host(`$OMBI_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.ombi.entrypoints=websecure"
      - "traefik.http.routers.ombi.tls.certresolver=mytlschallenge"
      - "traefik.http.services.ombi.loadbalancer.server.port=3579"
      - "traefik.http.routers.ombi.service=ombi"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      TZ: $TIMEZONE
      PGID: $PGID
      PUID: $PUID
    volumes:
      - $APPDATA/ombi:/config
    networks:
      - media_net

  # Indexers
  sonarr:
    container_name: sonarr
    image: mdhiggins/sonarr-sma:preview
    restart: always
    devices:
      - /dev/dri:/dev/dri
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Auth middleware
      - "traefik.http.routers.sonarr.middlewares=auth-admin"
      - "traefik.http.middlewares.auth-admin.forwardauth.address=http://organizr/api/v2/auth?group=1"

      # Main domain
      - "traefik.http.routers.sonarr.rule=Host(`$SONARR_DOMAIN.$MEDIA_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=mytlschallenge"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.sonarr.service=sonarr"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      PGID: $PGID
      PUID: $PUID
    volumes:
      - $APPDATA/sonarr/config:/config
      - $APPDATA/sonarr/sma:/usr/local/sma/config
      - $MEDIA/tvshows:/data/media/tv
      - $MEDIA/kids-tvshows:/data/media/kids-tvshows
      - $USENET_DOWNLOADS/nzbget:/data/downloads/nzbget
      - $TORRENT_DOWNLOADS/deluge:/data/downloads/deluge
    networks:
      - media_net

  radarr:
    container_name: radarr
    image: mdhiggins/radarr-sma:nightly
    restart: always
    devices:
      - /dev/dri:/dev/dri
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Auth middleware
      - "traefik.http.routers.radarr.middlewares=auth-admin"
      - "traefik.http.middlewares.auth-admin.forwardauth.address=http://organizr/api/v2/auth?group=1"

      # Main domain
      - "traefik.http.routers.radarr.rule=Host(`$RADARR_DOMAIN.$MEDIA_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=mytlschallenge"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.radarr.service=radarr"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      PGID: $PGID
      PUID: $PUID
    volumes:
      - $APPDATA/radarr/config:/config
      - $APPDATA/radarr/sma:/usr/local/sma/config
      - $MEDIA/movies:/data/media/movies
      - $MEDIA/kids-movies:/data/media/kids-movies
      - $USENET_DOWNLOADS/nzbget:/data/downloads/nzbget
      - $TORRENT_DOWNLOADS/deluge:/data/downloads/deluge
    networks:
      - media_net

  # radarr:
  #   container_name: radarr
  #   image: hotio/radarr
  #   restart: always
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.docker.network=mediacenter_net"

  #     # Auth middleware
  #     - "traefik.http.routers.radarr.middlewares=auth-admin"
  #     - "traefik.http.middlewares.auth-admin.forwardauth.address=http://organizr/api/v2/auth?group=1"

  #     # Main domain
  #     - "traefik.http.routers.radarr.rule=Host(`$RADARR_DOMAIN.$MEDIA_DOMAIN.$DOMAIN`)"
  #     - "traefik.http.routers.radarr.entrypoints=websecure"
  #     - "traefik.http.routers.radarr.tls.certresolver=mytlschallenge"
  #     - "traefik.http.services.radarr.loadbalancer.server.port=7878"
  #     - "traefik.http.routers.radarr.service=radarr"

  #     # Watchtower automated update label
  #     - "com.centurylinklabs.watchtower.enable=true"
  #   environment:
  #     PGID: $PGID
  #     PUID: $PUID
  #   volumes:
  #     - $APPDATA/radarr:/config
  #     - $MEDIA/movies:/data/media/movies
  #     - $MEDIA/kids-movies:/data/media/kids-movies
  #     - $USENET_DOWNLOADS/nzbget:/data/downloads/nzbget
  #     - $TORRENT_DOWNLOADS/deluge:/data/downloads/deluge
  #   networks:
  #     - media_net

  # # Api bypass not working yet
  # jackett:
  #   container_name: jackett
  #   image: hotio/jackett
  #   restart: always
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.docker.network=mediacenter_net"

  #     # Main domain
  #     - "traefik.http.routers.jackett.rule=Host(`$JACKETT_DOMAIN.$MEDIA_DOMAIN.$DOMAIN`)"
  #     - "traefik.http.routers.jackett.entrypoints=websecure"
  #     - "traefik.http.routers.jackett.tls.certresolver=mytlschallenge"
  #     - "traefik.http.services.jackett.loadbalancer.server.port=9117"
  #     - "traefik.http.routers.jackett.service=jackett"

  #     # Watchtower automated update label
  #     - "com.centurylinklabs.watchtower.enable=true"
  #   environment:
  #     PGID: $PGID
  #     PUID: $PUID
  #   volumes:
  #     - $APPDATA/jackett:/config
  #   networks:
  #     - media_net

  # hydra2:
  #   container_name: hydra2
  #   image: hotio/nzbhydra2
  #   restart: always
  #   ports:
  #     - 5076:5076
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.docker.network=mediacenter_net"

  #     # Auth middleware
  #     - "traefik.http.routers.hydra2.middlewares=auth-poweruser"
  #     - "traefik.http.middlewares.auth-poweruser.forwardauth.address=http://organizr/api/v2/auth?group=3"

  #     # Main domain
  #     - "traefik.http.routers.hydra2.rule=Host(`$HYDRA2_DOMAIN.$MEDIA_DOMAIN.$DOMAIN`)"
  #     - "traefik.http.routers.hydra2.entrypoints=websecure"
  #     - "traefik.http.routers.hydra2.tls.certresolver=mytlschallenge"
  #     - "traefik.http.services.hydra2.loadbalancer.server.port=5076"
  #     - "traefik.http.routers.hydra2.service=hydra2"

  #     # Watchtower automated update label
  #     - "com.centurylinklabs.watchtower.enable=true"
  #   environment:
  #     PGID: $PGID
  #     PUID: $PUID
  #     DEBUG: "yes"
  #   volumes:
  #     - $APPDATA/hydra2:/config
  #   networks:
  #     - media_net

  # Downloaders
  nzbget:
    container_name: nzbget
    image: linuxserver/nzbget
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Auth middleware
      - "traefik.http.routers.nzbget.middlewares=auth-admin"
      - "traefik.http.middlewares.auth-admin.forwardauth.address=http://organizr/api/v2/auth?group=1"

      # Main domain
      - "traefik.http.routers.nzbget.rule=Host(`$NZBGET_DOMAIN.$MEDIA_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.nzbget.entrypoints=websecure"
      - "traefik.http.routers.nzbget.tls.certresolver=mytlschallenge"
      - "traefik.http.services.nzbget.loadbalancer.server.port=6789"
      - "traefik.http.routers.nzbget.service=nzbget"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      PGID: $PGID
      PUID: $PUID
      TZ: $TIMEZONE
      DEBUG: "no"
    volumes:
      - $APPDATA/nzbget:/config
      - $USENET_DOWNLOADS/nzbget:/data/downloads/nzbget
    networks:
      - media_net

  # deluge:
  #   container_name: deluge
  #   image: binhex/arch-delugevpn
  #   restart: always
  #   cap_add:
  #     - NET_ADMIN
  #   ports:
  #     - "58846:58846"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.docker.network=mediacenter_net"

  #     - "traefik.http.routers.deluge.rule=Host(`$DELUGE_DOMAIN.$MEDIA_DOMAIN.$DOMAIN`)"
  #     - "traefik.http.routers.deluge.entrypoints=websecure"
  #     - "traefik.http.routers.deluge.tls.certresolver=mytlschallenge"
  #     - "traefik.http.services.deluge.loadbalancer.server.port=8112"

  #     - "com.centurylinklabs.watchtower.enable=true"
  #   environment:
  #     PGID: $PGID
  #     PUID: $PUID
  #     VPN_ENABLED: "yes"
  #     VPN_USER: $VPN_USERNAME
  #     VPN_PASS: $VPN_PASSWORD
  #     VPN_PROV: pia
  #     STRICT_PORT_FORWARD: "yes"
  #     ENABLE_PRIVOXY: "no"
  #     LAN_NETWORK: 192.168.0.0/24
  #     NAME_SERVERS: 209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1
  #     DELUGE_DAEMON_LOG_LEVEL: debug
  #     DELUGE_WEB_LOG_LEVEL: debug
  #     DEBUG: "true"
  #     UMASK: 000
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - $APPDATA/deluge:/config
  #     - $TORRENT_DOWNLOADS/deluge:/data/downloads/deluge
  #   networks:
  #     - media_net

  # Metrics
  tautulli:
    container_name: tautulli
    image: linuxserver/tautulli
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediacenter_net"

      # Auth middleware
      - "traefik.http.routers.tautulli.middlewares=auth-admin"
      - "traefik.http.middlewares.auth-admin.forwardauth.address=http://organizr/api/v2/auth?group=1"

      # Main domain
      - "traefik.http.routers.tautulli.rule=Host(`$TAUTULLI_DOMAIN.$MEDIA_DOMAIN.$DOMAIN`)"
      - "traefik.http.routers.tautulli.entrypoints=websecure"
      - "traefik.http.routers.tautulli.tls.certresolver=mytlschallenge"
      - "traefik.http.services.tautulli.loadbalancer.server.port=8181"
      - "traefik.http.routers.tautulli.service=tautulli"

      # Watchtower automated update label
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      TZ: $TIMEZONE
      PGID: $PGID
      PUID: $PUID
      DEBUG: "no"
    volumes:
      - $APPDATA/tautulli:/config
    networks:
      - media_net

  # Utilities
  cloudflare-companion:
    image: tiredofit/traefik-cloudflare-companion
    container_name: cloudflare
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      CF_EMAIL: $CLOUDFLARE_EMAIL
      CF_TOKEN: $CLOUDFLARE_API_TOKEN
      TARGET_DOMAIN: $DOMAIN
      DOMAIN1: $DOMAIN
      DOMAIN1_ZONE_ID: $CLOUDFLARE_DOMAIN_ZONE_ID
      DOMAIN1_PROXIED: "false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - media_net

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    command:
      - --label-enable
      - --cleanup
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - media_net

networks:
  media_net:
    name: mediacenter_net
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1
